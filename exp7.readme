Project Objective:
This project aims to build a deep learning model that can classify medical images into different categories using transfer learning with a pretrained ResNet-18 model.

Model Overview:
We use ResNet-18, a well-known convolutional neural network that has been pretrained on the ImageNet dataset. To make it work for medical image classification, we replace the last layer so it matches the number of classes in the Medical MNIST dataset. This lets the model reuse the features it learned from general images and adapt them to our medical images.

Code Summary:

Libraries Used:
PyTorch, Torchvision, Matplotlib

Dataset Handling:
Images are organized in separate folders for training and validation.
Data augmentation (like random horizontal flip) and normalization are applied to improve model performance.

Model Setup:
Load a pretrained ResNet-18 model.
Replace its final layer to match the number of output classes in our dataset.

Training:
Model is trained for 10 epochs.
Tracks both training and validation accuracy/loss during each epoch.
Saves the best model based on highest validation accuracy.

Visualization:
A loss curve is plotted at the end to show how the model improved during training.
Performance Evaluation:

Metrics:
Accuracy and loss for both training and validation are printed for each epoch.
The model with the best validation accuracy is saved.

Visualization:
Loss curve helps in understanding how training progressed over time.

Note:
Final accuracy and loss values can vary depending on dataset size and quality.

Comments & Suggestions:
The code is modular, making it easy to test other models or training methods.

To improve performance, consider:
Evaluating on a test set
Trying deeper models like ResNet-50
Using techniques like learning rate scheduling or early stopping

Model Limitations:
If the dataset is small or imbalanced, the model might not perform well.
ResNet-18 is not the most powerful model—better options exist.
The code doesn’t currently check for or handle bad images in the dataset.
